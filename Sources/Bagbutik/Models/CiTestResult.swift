import Foundation

/**
 The data structure that represents a Test Results resource.

 Full documentation:
 <https://developer.apple.com/documentation/appstoreconnectapi/citestresult>
 */
public struct CiTestResult: Codable {
    /// The opaque resource ID that uniquely identifies the resource.
    public let id: String
    /// Navigational links that include the self-link.
    public let links: ResourceLinks
    /// The resource type.
    public var type: String { "ciTestResults" }
    /// The resource's attributes.
    public let attributes: Attributes?

    public init(id: String, links: ResourceLinks, attributes: Attributes? = nil) {
        self.id = id
        self.links = links
        self.attributes = attributes
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)
        id = try container.decode(String.self, forKey: .id)
        links = try container.decode(ResourceLinks.self, forKey: .links)
        attributes = try container.decodeIfPresent(Attributes.self, forKey: .attributes)
        if try container.decode(String.self, forKey: .type) != type {
            throw DecodingError.dataCorruptedError(forKey: .type, in: container, debugDescription: "Not matching \(type)")
        }
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(links, forKey: .links)
        try container.encode(type, forKey: .type)
        try container.encodeIfPresent(attributes, forKey: .attributes)
    }

    private enum CodingKeys: String, CodingKey {
        case id
        case links
        case type
        case attributes
    }

    /**
     The attributes that describe a Test Results resource.

     Full documentation:
     <https://developer.apple.com/documentation/appstoreconnectapi/citestresult/attributes>
     */
    public struct Attributes: Codable {
        /// The name of the class that contained the tests Xcode Cloud performed.
        public var className: String?
        /// Information about the test results for a specific test destination.
        @NullCodable public var destinationTestResults: [DestinationTestResults]?
        /// Information about a test file.
        @NullCodable public var fileSource: FileLocation?
        /// A message generated by a test.
        public var message: String?
        /// The name of the test result; for example, ExampleName.
        public var name: String?
        /// Test status information; for example, whether the test succeeded or failed.
        @NullCodable public var status: CiTestStatus?

        public init(className: String? = nil, destinationTestResults: [DestinationTestResults]? = nil, fileSource: FileLocation? = nil, message: String? = nil, name: String? = nil, status: CiTestStatus? = nil) {
            self.className = className
            self.destinationTestResults = destinationTestResults
            self.fileSource = fileSource
            self.message = message
            self.name = name
            self.status = status
        }

        public struct DestinationTestResults: Codable {
            public var deviceName: String?
            public var duration: Double?
            public var osVersion: String?
            @NullCodable public var status: CiTestStatus?
            public var uuid: String?

            public init(deviceName: String? = nil, duration: Double? = nil, osVersion: String? = nil, status: CiTestStatus? = nil, uuid: String? = nil) {
                self.deviceName = deviceName
                self.duration = duration
                self.osVersion = osVersion
                self.status = status
                self.uuid = uuid
            }
        }
    }
}
